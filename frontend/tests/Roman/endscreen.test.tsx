import { render, screen } from '@testing-library/react'
import { describe, test, expect } from 'vitest'
import EndScreen from '../../src/components/EndScreen'

describe('EndScreen komponent', () => {
    const mockResults = [
        { name: 'Alice', wpm: 80, isYou: true, position: 1, finishedAt: 12345 },
        { name: 'Bob', wpm: 70, position: 2, finishedAt: 12350 },
        { name: 'Charlie', wpm: 0, position: undefined, finishedAt: null },
    ]

    test('zobraz√≠ nadpis', () => {
        render(<EndScreen results={mockResults} />)

        expect(screen.getByText('üèÅ V√Ωsledky pretekov')).toBeInTheDocument()
    })

    test('zobraz√≠ v≈°etk√Ωch hr√°ƒçov', () => {
        render(<EndScreen results={mockResults} />)

        expect(screen.getByText('1. Alice (You)')).toBeInTheDocument()
        expect(screen.getByText('2. Bob')).toBeInTheDocument()
        expect(screen.getByText('‚Äî Charlie')).toBeInTheDocument()
    })

    test('zobraz√≠ spr√°vne info pre hr√°ƒça ƒço e≈°te nedokonƒçil', () => {
        render(<EndScreen results={mockResults} />)

        expect(screen.getByText('Still racing...')).toBeInTheDocument()
    })

    test('tlaƒçidlo "Sp√§≈• na √∫vod" existuje', () => {
        render(<EndScreen results={mockResults} />)

        const backButton = screen.getByRole('button', { name: /sp√§≈• na √∫vod/i })
        expect(backButton).toBeInTheDocument()
    })

    test('tlaƒçidlo "Hra≈• znova" existuje', () => {
        render(<EndScreen results={mockResults} />)

        const retryButton = screen.getByRole('button', { name: /hra≈• znova/i })
        expect(retryButton).toBeInTheDocument()
    })
})
